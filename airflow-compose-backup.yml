version: "3.8"
services:

######################################################
# Result Backend
######################################################
  redis:
    image: 'redis:6.2.1-alpine'
    restart: always
    container_name: redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./mnt/redis:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

######################################################
# AIRFLOW
######################################################
  airflow:
    image: airflow-local
    restart: unless-stopped
    container_name: airflow-webserver
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    volumes:
      - ./mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./mnt/airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
    ports:
      - 8080:8080
    command: ["webserver"]
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

  scheduler:
    image: airflow-local
    restart: always
    container_name: airflow-scheduler
    volumes:
      - ./mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./mnt/airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/logs
    command: ["scheduler"]
    healthcheck:
      test: [ "CMD", "echo", "0" ]
      timeout: 45s
      interval: 10s
      retries: 10

  worker:
    image: airflow-local
    restart: always
    volumes:
      - ./mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./mnt/airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/logs
    command: ["celery", "worker"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5

  flower:
    image: airflow-local
    restart: unless-stopped
    container_name: airflow-flower
    ports:
      - "5555:5555"
    command: ["celery", "flower"]
    volumes:
      - ./mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./mnt/airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/logs
    healthcheck:
      test: [ "CMD", "nc", "-z", "flower", "5555" ]
      timeout: 45s
      interval: 10s
      retries: 10

# ######################################################
# # WEB SERVICE
# ######################################################
  web:
    image: artifactory.wdc.com:6575/bossruji/flask-dags-upload-web:v1
    restart: unless-stopped
    container_name: flask-dag-uploader
    depends_on:
      - redis
      - airflow
      - scheduler
    ports:
      - "5000:5000"
    healthcheck:
      test: [ "CMD", "echo", "0" ]
      timeout: 45s
      interval: 10s
      retries: 10

# ######################################################
# # EMAIL SERVICE
# ######################################################
#   mailhog:
#     image: mailhog/mailhog
#     container_name: mailhog
#     ports:
#       - "1025:1025"
#       - "8025:8025"

######################################################
# NETWORK
######################################################
networks:
  default:
    name: airflow-network
    external:
      name: airflow-template_pgsite